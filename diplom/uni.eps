%!PS-Adobe-2.0 EPSF-1.2
%%Title: Logo Bayr.FH8
%%Creator: FreeHand 8.0
%%CreationDate: Fri Feb 16 16:40:31 2001 
%%BoundingBox: 0 0 228 71
%%FHPathName:X:\uni_bayreuth\Internet_Logo_Seite\so_wirds\Logo Bayr.FH8
%ALDOriginalFile:X:\uni_bayreuth\Internet_Logo_Seite\so_wirds\Logo Bayr.FH8
%ALDBoundingBox: -28 -30 255 111
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%CMYKProcessColor: 0 0 0 0.5 (0c 0m 0y 50k)
%%EndComments
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if	
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get  32 sub 0 exch put
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed {			
_NXLevel2 not {			
/colorimage where {
userdict eq {
/_rci false def		
} if
} if
} if
} if
/md defed{	
md type /dicttype eq {		
/colorimage where {		
md eq {				
/_rci false def	
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf	
}ifelse
/privrectpath {	
4 -2 roll m
dtransform round exch round exch idtransform	
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`	
{
false setoverprint		
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1
statusdict begin
/processcolors defed
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
%	pix = x^2 + y^2
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}			
{GrayAngle GrayFrequency}	
{0 Width Height matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}	
ifelse
}
ifelse
end
}
{
currentscreen pop exch			
}
ifelse
printerRes 300 max exch div exch	
2 copy								
sin mul round dup mul				
3 1 roll							
cos mul round dup mul				
add 1 add							
dup maxsteps gt {pop maxsteps} if	
dup minsteps lt {pop minsteps} if	
}
ifelse
} bdf
/nextrelease defed {						
/languagelevel defed not {				
/framebuffer defed {				
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps
{
forcemaxsteps
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max  
printerRes div 					 
gradfrequency mul 				 
round 						 
5 max						 
min							 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def			
/delta -0 def			
/frac -0 def			
/height -0 def			
/left -0 def			
/numsteps1 -0 def		
/radius -0 def			
/right -0 def			
/top -0 def				
/width -0 def			
/xt -0 def				
/yt -0 def				
/df currentflat def		
/tempstr 1 string def	
/clipflatness currentflat def	
/inverted?				
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def		
/tc2 [0 0 0 1] def		
/storerect{/top xdf /right xdf /bottom xdf /left xdf
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}	
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def	
{				
exch dup	
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall
NF
}bdf
/MN{
1 index length 		
/Len exch def
dup length Len add 	
string dup 			
Len 				
4 -1 roll 			
putinterval 		
dup 				
0 					
4 -1 roll			
putinterval			
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFJ		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFJ{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCJ}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup			
hasfont		
not			
{			
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont			
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFJ{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFJ				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/GS {
dup
hasfont
{
FFJ
curtextmtx makefont setfont
exch
5 1 roll
ts
pop
} {
pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFK		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFK{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCK}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup			
hasfont		
not			
{			
pop
/JCsm
hasfont			
{
/JCsm
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFK{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFK				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFTC		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFTC{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCTC}
ifelse
}bdf
/FDFTC
{
dup			
hasfont		
not			
{			
pop
/DFMing-Lt-HK-BF
hasfont			
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFTC{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFTC				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/fps{
currentflat 		
exch 				
dup 0 le{pop 1}if	
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}	
{exit}			
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf		
/W{/clipper load 100 clipflatness dup setflat fps}bdf
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/findheaderfont {
AVec 256 array copy
/FHT /|______Helvetica dup RF findfont def
FHT DoPatch
FHT
}	def
end		%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh	
_efh	
end %. AltsysDict
%%EndSetup
AltsysDict begin	
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor {    
max max max		
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf		
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get	0.3 mul		
4 index 2 index get	0.59 mul	
4 index 3 index get	0.11 mul	
4 index 4 index get				
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx
6 -1 roll/exec cvx
7 -1 roll/exec cvx
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub	
1.0 dup im ik add min sub	
1.0 dup iy ik add min sub	
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll	
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll	
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf		
/setspotcolor {		
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf			
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def	
/_lfp4 {
1 pop	
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor						
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def	
/_lfs4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 2 lt {pop 2} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
radius inrad sub abs			
adjnumsteps						
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf				
currentflat mark				
currentflat clipflatness		
{
{
dup setflat				
W 						
0 1 numsteps1			
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop	
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor					
calcgraysteps mul abs round	
radius inrad sub abs		
adjnumsteps					
dup 1 lt {pop 1} if			
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf			
currentflat mark			
currentflat clipflatness	
{
{
dup setflat			
W 					
0 1 numsteps1		
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def	
/vc{
AltsysDict /cvc 2 index put	
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor}	ifelse }
ifelse
}bdf	
0 setseparationgray
/imgr {1692 1570.11 1975.46 1711.84 } def			
/bleed 0 def			
/clpr {1692 1570.11 1975.46 1711.84 } def			
/xs 1 def				
/ys 1 def				
/botx 0 def			
/overlap 0 def			
/wdist 18 def			
0 2 mul fhsetspreadsize	
0 0 ne {/df 0 def /clipflatness 0 def} if	
/maxsteps 256 def		
/forcemaxsteps false def	
/minsteps 0 def		
userdict begin /AGDOrigMtx matrix currentmatrix def end
vms
-1720 -1600 translate
/currentpacking defed{false setpacking}if 	
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
1724.5459 1603.3141 m
1724.5459 1666.4408 L
1745.5455 1666.4408 L
1745.5455 1624.3147 L
0.7409 w
3.863693 M
S	
n
1724.0896 1603.3141 m
1755.5886 1603.3141 L
1787.0886 1634.815 L
1787.0886 1650.4954 L
1771.5184 1650.4954 L
1724.0896 1603.3141 L
f	
n
1721.2715 1669.815 m
1790.6189 1669.815 L
1790.6189 1600.4658 L
1721.2715 1600.4658 L
1721.2715 1669.815 L
s	
n
1809.4749 1634.4622 m
1813.478 1634.4622 1815.2222 1636.6725 1815.2222 1642.0141 C
1815.2222 1645.9972 1815.2271 1649.0025 1815.2271 1650.695 C
1814.4814 1650.695 1814.4509 1650.6502 1813.8691 1650.6502 C
1813.8691 1648.3758 1813.8015 1645.8428 1813.8243 1643.7246 C
1813.8754 1638.9889 1813.6843 1636.0509 1810.3828 1636.0509 C
1807.7004 1636.0509 1806.2982 1636.9729 1806.3023 1642.5906 C
1806.3038 1644.666 1806.3023 1646.2022 1806.3023 1650.695 C
1805.5266 1650.695 1803.9152 1650.695 1803.1609 1650.6479 C
1803.2021 1649.8882 1803.2021 1643.0041 1803.2021 1640.5175 C
1803.2021 1636.189 1805.9465 1634.4622 1809.4749 1634.4622 C
true setoverprint
f	
false setoverprint
n
1839.0387 1634.7473 m
1840.0228 1634.7484 1841.0255 1634.7484 1842.1177 1634.7484 C
1842.1177 1637.0338 1842.1031 1648.4848 1842.1031 1650.6542 C
1840.9971 1650.6542 1840.1712 1650.6542 1839.0465 1650.6542 C
1839.0653 1647.0893 1839.0464 1638.7154 1839.0387 1634.7473 C
true setoverprint
f	
false setoverprint
n
true eomode
1884.1968 1634.7484 m
1885.0526 1634.7484 1886.7997 1634.7484 1887.7629 1634.7484 C
1886.0903 1637.3628 1884.3382 1640.0142 1882.8718 1642.6286 C
1885.1401 1643.2071 1886.4232 1644.6415 1886.4232 1646.8858 C
1886.4232 1648.2509 1885.8504 1649.2689 1884.9339 1649.9398 C
1884.132 1650.5183 1883.2842 1650.7265 1880.97 1650.7265 C
1879.4119 1650.7265 1876.7686 1650.7265 1875.9052 1650.7265 C
1875.9052 1647.3058 1875.9052 1637.0467 1875.9052 1634.7452 C
1877.0277 1634.7452 1877.6897 1634.7452 1878.9808 1634.7452 C
1878.9808 1636.8452 1878.9808 1642.1331 1878.9808 1642.1331 C
1879.9377 1642.1595 L
1884.1968 1634.7484 L
h
1883.5515 1646.3813 m
1883.5515 1644.2065 1882.7818 1643.0637 1879.8015 1643.0682 C
1879.6411 1643.0685 1879.164 1643.0598 1878.9808 1643.0829 C
1878.9808 1645.7556 1878.9808 1647.3504 1878.9808 1649.6202 C
1882.4487 1649.6454 1883.5515 1649.1115 1883.5515 1646.3813 C
true setoverprint
f	
false setoverprint
n
1803.0625 1613.591 m
1803.589 1613.6371 1807.7289 1613.591 1808.9972 1613.591 C
1811.8448 1613.591 1814.5728 1614.9055 1814.5728 1618.2035 C
1814.5728 1620.994 1811.7252 1622.0088 1810.2655 1622.078 C
1810.2655 1622.1241 L
1811.7491 1622.3547 1814.166 1623.4156 1814.166 1625.9294 C
1814.166 1628.4432 1812.638 1629.528 1809.3322 1629.5041 C
1807.9682 1629.4942 1803.9157 1629.5045 1803.0625 1629.5041 C
1803.0625 1626.1156 1803.0625 1616.6754 1803.0625 1613.591 C
h
1810.9781 1625.4912 m
1810.9781 1623.5309 1809.2865 1622.5338 1807.9225 1622.5338 C
1806.1418 1622.5338 L
1806.1418 1623.6874 1806.1418 1626.667 1806.1418 1628.3666 C
1806.9207 1628.3666 1807.3499 1628.3666 1808.0439 1628.3666 C
1809.9344 1628.3666 1810.9781 1626.9672 1810.9781 1625.4912 C
h
1811.1008 1618.042 m
1811.1008 1616.0356 1809.6543 1614.7697 1808.2424 1614.7697 C
1807.7159 1614.7697 1807.2102 1614.7393 1806.2492 1614.7393 C
1806.2127 1616.6651 1806.2127 1619.3666 1806.2127 1621.4266 C
1806.4999 1621.4266 1807.4178 1621.4266 1807.8485 1621.4266 C
1809.7629 1621.4266 1811.1008 1620.1868 1811.1008 1618.042 C
true setoverprint
f	
false setoverprint
n
1824.7817 1629.531 m
1824.2179 1629.5314 1823.6534 1629.5314 1823.2039 1629.531 C
1821.4184 1624.2714 1818.3226 1616.1117 1817.3053 1613.5511 C
1817.9818 1613.5511 1818.3006 1613.5636 1818.8077 1613.5636 C
1819.6138 1615.6338 1819.972 1616.5742 1820.6438 1618.4696 C
1821.8226 1618.4696 1824.0762 1618.4696 1825.4644 1618.4696 C
1825.9834 1616.901 1826.5191 1615.1198 1826.9551 1613.5511 C
1827.7256 1613.5511 1829.6476 1613.5511 1830.5525 1613.5511 C
1828.9845 1617.3188 1826.5464 1624.2714 1824.7817 1629.531 C
h
1821.002 1619.5885 m
1821.8674 1621.9772 1822.36 1623.4247 1823.0765 1625.5441 C
1823.7408 1623.7447 1824.4495 1621.457 1825.0516 1619.5885 C
1821.002 1619.5885 L
true setoverprint
f	
false setoverprint
n
1855.0312 1613.5511 m
1855.9628 1613.5511 1857.7009 1613.5511 1858.5925 1613.5511 C
1856.9154 1616.1656 1855.1604 1618.8439 1853.69 1621.4584 C
1855.9644 1622.0368 1857.251 1623.4713 1857.251 1625.7156 C
1857.251 1627.0806 1856.6766 1628.0986 1855.7577 1628.7696 C
1854.9536 1629.348 1854.1035 1629.5562 1851.7832 1629.5562 C
1850.2209 1629.5562 1847.5706 1629.5563 1846.7048 1629.5563 C
1846.7048 1626.1355 1846.7048 1615.8765 1846.7048 1613.575 C
1847.8303 1613.575 1848.4941 1613.575 1849.7886 1613.575 C
1849.7886 1615.675 1849.7886 1620.9628 1849.7886 1620.9628 C
1850.7481 1620.9893 L
1855.0312 1613.5511 L
h
1854.3716 1625.2111 m
1854.3716 1623.0362 1853.5998 1621.8934 1850.6115 1621.898 C
1850.4507 1621.8982 1849.9724 1621.8895 1849.7886 1621.9127 C
1849.7886 1624.5854 1849.7886 1626.1802 1849.7886 1628.45 C
1853.2658 1628.4751 1854.3716 1627.9412 1854.3716 1625.2111 C
true setoverprint
f	
false setoverprint
n
false eomode
1904.9857 1634.7473 m
1905.9698 1634.7484 1906.9725 1634.7484 1908.0647 1634.7484 C
1908.0647 1637.0338 1908.0501 1648.4848 1908.0501 1650.6542 C
1906.9441 1650.6542 1906.1182 1650.6542 1904.9935 1650.6542 C
1905.0123 1647.0893 1904.9934 1638.7154 1904.9857 1634.7473 C
true setoverprint
f	
false setoverprint
n
1820.6746 1634.7452 m
1821.1485 1634.7452 1821.4215 1634.7452 1822.0905 1634.7452 C
1822.0905 1636.0529 1822.049 1644.2646 1822.0905 1645.9948 C
1825.2877 1642.2577 1828.201 1638.4854 1831.0452 1634.7484 C
1831.4709 1634.7484 1831.91 1634.7484 1832.555 1634.7452 C
1832.555 1640.8427 1832.555 1643.6112 1832.555 1650.6542 C
1831.8861 1650.6542 1832.0107 1650.6542 1831.1546 1650.6794 C
1831.1488 1648.6097 1831.1488 1643.5619 1831.1424 1639.8415 C
1828.0906 1643.5094 1825.0801 1647.0587 1822.0905 1650.7265 C
1821.533 1650.7265 1821.3157 1650.7265 1820.6746 1650.7265 C
1820.6746 1649.0586 1820.6746 1636.0808 1820.6746 1634.7452 C
true setoverprint
f	
false setoverprint
n
1853.175 1639.099 m
1851.9086 1642.9514 1850.6816 1646.3014 1849.2623 1650.6794 C
1847.825 1650.6542 1847.1883 1650.6542 1845.7841 1650.6794 C
1847.0944 1647.0893 1850.1239 1638.6931 1851.4111 1634.7484 C
1852.1727 1634.7484 1852.3519 1634.7484 1853.0732 1634.7484 C
1855.0307 1640.4131 1857.1003 1646.3113 1858.6821 1650.6542 C
1858.5835 1650.6542 1857.5396 1650.6542 1857.1813 1650.6542 C
1855.5646 1645.7296 1854.5815 1643.1005 1853.175 1639.099 C
true setoverprint
f	
false setoverprint
n
1862.3418 1634.7452 m
1863.8725 1634.7452 1869.6065 1634.7282 1870.9733 1634.7452 C
1870.9733 1635.4397 1870.9733 1635.5805 1870.9733 1636.138 C
1868.5227 1636.138 1867.1333 1636.138 1865.4032 1636.138 C
1865.4032 1637.7802 1865.4032 1641.8456 1865.4032 1642.8145 C
1867.1564 1642.8145 1868.8015 1642.8145 1870.6667 1642.8145 C
1870.6667 1643.3441 1870.6667 1643.4947 1870.6613 1644.1948 C
1868.4948 1644.1916 1867.5495 1644.1916 1865.4032 1644.1916 C
1865.4032 1645.8756 1865.4032 1647.2859 1865.4032 1649.2348 C
1867.1359 1649.2517 1868.6507 1649.2517 1870.8225 1649.2517 C
1870.8225 1650.0043 1870.8225 1649.694 1870.806 1650.666 C
1867.9653 1650.666 1864.4021 1650.666 1862.3418 1650.666 C
1862.3418 1646.9377 1862.3418 1637.4745 1862.3418 1634.7452 C
true setoverprint
f	
false setoverprint
n
1899.5631 1648.4417 m
1899.5631 1649.4491 1899.5631 1648.9481 1899.5558 1649.8921 C
1898.6965 1650.5253 1897.2672 1650.9793 1895.7725 1650.9793 C
1893.3019 1650.9793 1890.6938 1649.2023 1890.6938 1646.0189 C
1890.6938 1640.7823 1897.8854 1641.7288 1897.8854 1638.2455 C
1897.8854 1636.9537 1896.4783 1635.6656 1894.859 1635.6656 C
1893.1774 1635.6656 1890.6211 1637.1428 1890.6211 1637.1428 C
1890.6211 1635.79 1890.6164 1636.6496 1890.6211 1635.5212 C
1891.4947 1635.0688 1892.8452 1634.4623 1894.34 1634.4623 C
1897.6409 1634.4623 1900.439 1636.5846 1900.439 1639.6757 C
1900.439 1644.9123 1893.5303 1644.0587 1893.5303 1647.4729 C
1893.5303 1648.5802 1894.4231 1649.8992 1895.6894 1649.8978 C
1897.8618 1649.8955 1899.5631 1648.4417 1899.5631 1648.4417 C
true setoverprint
f	
false setoverprint
n
1915.4777 1634.7484 m
1916.7054 1634.7453 1917.1488 1634.7484 1918.4189 1634.7452 C
1918.4189 1637.7375 1918.3774 1648.9837 1918.4189 1649.3067 C
1919.4838 1649.3067 1920.8325 1649.3067 1922.2428 1649.3067 C
1922.2428 1649.8793 1922.2428 1650.2087 1922.2428 1650.7265 C
1919.0233 1650.7265 1914.732 1650.7099 1911.5739 1650.7099 C
1911.5739 1650.1921 1911.5739 1649.9024 1911.5739 1649.2722 C
1912.9801 1649.2722 1914.679 1649.2722 1915.4886 1649.2722 C
1915.4886 1642.7513 1915.4885 1641.0309 1915.4777 1634.7484 C
true setoverprint
f	
false setoverprint
n
1940.8193 1634.7484 m
1942.047 1634.7453 1942.5531 1634.7484 1943.7526 1634.7452 C
1943.7526 1637.7375 1943.7111 1648.9837 1943.7526 1649.3067 C
1944.8176 1649.3067 1946.1662 1649.3067 1947.5766 1649.3067 C
1947.5766 1649.8793 1947.5766 1650.2087 1947.5766 1650.7265 C
1944.357 1650.7265 1940.0657 1650.7099 1936.9077 1650.7099 C
1936.9077 1650.1921 1936.9077 1649.9024 1936.9077 1649.2722 C
1938.3139 1649.2722 1940.0127 1649.2722 1940.8224 1649.2722 C
1940.8224 1642.7513 1940.8302 1641.0309 1940.8193 1634.7484 C
true setoverprint
f	
false setoverprint
n
1914.0388 1613.591 m
1915.5232 1613.591 1916.3814 1613.591 1917.0363 1613.591 C
1917.0363 1617.7127 1917.0363 1626.3847 1917.0363 1629.5723 C
1916.1195 1629.5723 1915.2176 1629.5723 1914.0388 1629.5723 C
1914.0388 1626.996 1914.024 1625.5664 1914.024 1623.0058 C
1911.774 1623.0058 1910.2418 1623.0058 1908.028 1623.0058 C
1908.028 1625.9692 1908.028 1627.3889 1908.028 1629.5723 C
1906.6673 1629.5723 1905.7941 1629.5723 1904.9488 1629.5723 C
1904.9488 1625.9045 1904.9422 1617.4597 1904.9422 1613.5331 C
1905.8802 1613.5331 1906.9259 1613.5331 1908.028 1613.5331 C
1908.028 1615.8934 1908.028 1621.5309 1908.028 1621.5309 C
1909.7179 1621.5127 1911.9049 1621.5127 1914.024 1621.5161 C
1914.024 1621.5161 1914.0388 1616.2337 1914.0388 1613.591 C
true setoverprint
f	
false setoverprint
n
1894.767 1613.5331 m
1895.9947 1613.53 1896.4279 1613.5331 1897.7122 1613.5331 C
1897.7122 1616.5254 1897.6707 1627.7716 1897.7122 1628.0946 C
1898.7772 1628.0946 1900.1258 1628.0946 1901.5362 1628.0946 C
1901.5362 1628.6672 1901.5362 1628.9966 1901.5362 1629.5144 C
1898.3167 1629.5144 1894.0254 1629.4978 1890.8673 1629.4978 C
1890.8673 1628.98 1890.8673 1628.6903 1890.8673 1628.0601 C
1892.2735 1628.0601 1893.9724 1628.0601 1894.782 1628.0601 C
1894.782 1621.5392 1894.7778 1619.8157 1894.767 1613.5331 C
true setoverprint
f	
false setoverprint
n
1882.254 1613.2983 m
1886.257 1613.2983 1888.0013 1615.5085 1888.0013 1620.85 C
1888.0013 1624.8332 1888.0061 1627.8385 1888.0061 1629.531 C
1887.2604 1629.531 1887.2023 1629.5314 1886.6205 1629.5314 C
1886.6205 1627.257 1886.5805 1624.6788 1886.6034 1622.5606 C
1886.6544 1617.8249 1886.4633 1614.8869 1883.1619 1614.8869 C
1880.4794 1614.8869 1879.0773 1615.8089 1879.0813 1621.4265 C
1879.0828 1623.502 1879.0813 1625.0382 1879.0813 1629.531 C
1878.3056 1629.531 1876.8139 1629.5314 1875.9313 1629.5314 C
1875.9403 1628.7161 1875.9812 1621.8401 1875.9812 1619.3535 C
1875.9812 1615.025 1878.7255 1613.2983 1882.254 1613.2983 C
true setoverprint
f	
false setoverprint
n
vmrs
1862.3418 1613.575 m
1863.8725 1613.575 1869.6065 1613.558 1870.9733 1613.575 C
1870.9733 1614.2695 1870.9733 1614.4102 1870.9733 1614.9677 C
1868.5227 1614.9677 1867.1333 1614.9677 1865.4032 1614.9677 C
1865.4032 1616.61 1865.4032 1620.6754 1865.4032 1621.6442 C
1867.1564 1621.6442 1868.8015 1621.6442 1870.6667 1621.6442 C
1870.6667 1622.1738 1870.6667 1622.3245 1870.6613 1623.0246 C
1868.4948 1623.0213 1867.5495 1623.0213 1865.4032 1623.0213 C
1865.4032 1624.7053 1865.4032 1626.1762 1865.4032 1628.1251 C
1867.1359 1628.142 1868.633 1628.1337 1870.8048 1628.1337 C
1870.8048 1628.9311 1870.8225 1628.5843 1870.806 1629.5563 C
1867.9653 1629.5563 1864.4021 1629.5563 1862.3418 1629.5563 C
1862.3418 1625.828 1862.3418 1616.3043 1862.3418 1613.575 C
true setoverprint
f	
false setoverprint
n
1838.0026 1622.1576 m
1836.7944 1624.4253 1835.803 1626.7403 1834.4005 1629.5723 C
1833.4779 1629.5723 1832.0734 1629.5723 1831.2034 1629.5723 C
1831.847 1628.2574 1834.3042 1623.3208 1835.7367 1620.2527 C
1835.7327 1619.1956 1835.795 1615.0674 1835.7327 1613.591 C
1836.6682 1613.591 1837.8455 1613.591 1838.8119 1613.591 C
1838.8119 1615.4284 1838.8119 1619.5115 1838.8119 1620.6579 C
1840.6524 1624.2405 1842.1263 1626.9803 1843.3965 1629.5314 C
1842.7628 1629.5314 1842.4322 1629.531 1841.734 1629.531 C
1840.4268 1626.7011 1838.0026 1622.1576 1838.0026 1622.1576 C
true setoverprint
f	
false setoverprint
n
true eomode
1930.5987 1650.6542 m
1930.151 1650.6542 1929.4391 1650.6542 1929.0004 1650.6542 C
1927.2161 1645.4125 1924.1057 1637.3002 1923.0891 1634.7483 C
1923.7536 1634.7484 1924.0668 1634.7484 1924.5736 1634.7484 C
1925.3791 1636.8116 1925.7724 1637.8136 1926.4437 1639.7025 C
1927.6217 1639.7025 1929.8739 1639.7025 1931.2612 1639.7025 C
1931.7414 1638.0795 1932.2879 1636.3008 1932.7574 1634.7483 C
1933.3856 1634.7484 1935.5405 1634.7484 1936.3468 1634.7483 C
1934.8729 1638.5991 1932.3623 1645.4125 1930.5987 1650.6542 C
h
1926.8017 1640.8176 m
1927.6665 1643.1982 1928.1588 1644.6408 1928.8748 1646.7529 C
1929.5387 1644.9597 1930.247 1642.6798 1930.8487 1640.8176 C
1926.8017 1640.8176 L
true setoverprint
f	
false setoverprint
n
false eomode
1924.7101 1650.5475 m
1924.7101 1651.2095 1925.2467 1651.7461 1925.9086 1651.7461 C
1926.5706 1651.7461 1927.1072 1651.2095 1927.1072 1650.5475 C
1927.1072 1649.8855 1926.5706 1649.3489 1925.9086 1649.3489 C
1925.2467 1649.3489 1924.7101 1649.8855 1924.7101 1650.5475 C
f	
0.4052 w
S	
n
1932.1938 1650.5475 m
1932.1938 1651.2095 1932.7304 1651.7461 1933.3923 1651.7461 C
1934.0543 1651.7461 1934.5909 1651.2095 1934.5909 1650.5475 C
1934.5909 1649.8855 1934.0543 1649.3489 1933.3923 1649.3489 C
1932.7304 1649.3489 1932.1938 1649.8855 1932.1938 1650.5475 C
f	
S	
n
vmr
vmr
end
%%Trailer

%%EndDocument
